# Disable directory listing
Options -Indexes
# --- MIME Types for Images ---
AddType image/jpeg .jpeg .jpg
AddType image/png .png
AddType image/gif .gif
AddType image/webp .webp
AddType image/bmp .bmp
AddType image/tiff .tif .tiff

# Force correct MIME types for images (especially in directories with spaces)
<Files ~ "\.(jpe?g)$">
    ForceType image/jpeg
</Files>

<Files ~ "\.png$">
    ForceType image/png
</Files>

<Files ~ "\.gif$">
    ForceType image/gif
</Files>

<Files ~ "\.webp$">
    ForceType image/webp
</Files>

<Files ~ "\.bmp$">
    ForceType image/bmp
</Files>

<Files ~ "\.(tif|tiff)$">
    ForceType image/tiff
</Files>

# --- Existing Redirect Rules ---
RewriteEngine On

# ✅ Exclude critical static files from Prerender.io
RewriteCond %{REQUEST_URI} ^/robots\.txt([/?].*)?$ [NC]
RewriteRule .* - [L]

RewriteCond %{REQUEST_URI} ^/sitemap\.xml([/?].*)?$ [NC]
RewriteRule .* - [L]

RewriteCond %{REQUEST_URI} ^/favicon\.ico$ [NC]
RewriteRule .* - [L]

# ✅ Specifically exclude images directory from Prerender (PRIORITY - must be before general static files rule)
RewriteCond %{REQUEST_URI} ^/images/ [NC]
RewriteRule .* - [L]

# Exclude other static files from Prerender
RewriteCond %{REQUEST_URI} \.(js|css|xml|gif|jpg|jpeg|png|svg|webp|woff|woff2|ttf|eot|ico|bmp|tiff)$ [NC]
RewriteRule .* - [L]

# ✅ Redirect sitemap.txt -> sitemap.xml
RewriteCond %{REQUEST_URI} ^/sitemap\.txt$ [NC]
RewriteRule ^sitemap\.txt$ https://outbackgems.com.au/sitemap.xml [R=301,L]

# Redirect www to non-www (and force HTTPS)
RewriteCond %{HTTP_HOST} ^www\.outbackgems\.com\.au [NC]
RewriteRule ^(.*)$ https://outbackgems.com.au/$1 [L,R=301]

# Redirect HTTP to HTTPS (for non-www)
RewriteCond %{HTTPS} off
RewriteCond %{HTTP_HOST} ^outbackgems\.com\.au [NC]
RewriteRule ^(.*)$ https://outbackgems.com.au/$1 [L,R=301]

# Only apply Prerender to bot user agents, not regular users
RewriteCond %{HTTP_USER_AGENT} (googlebot|bingbot|yahoo|baiduspider|facebookexternalhit|twitterbot) [NC]
RequestHeader set X-Prerender-Token "jB2NVBnrYbku2t67YS1V"
RewriteRule ^(.*)$ https://service.prerender.io/https://outbackgems.com.au/$1 [P,L]

# --- File Access Security ---

# Block access to backup and config files
<FilesMatch "(\.htaccess|\.htpasswd|\.env|\.git|\.svn|\.DS_Store|Thumbs\.db|\.bak|\.backup|\.old|\.orig|\.save|\.swp|\.tmp|~)$">
    Require all denied
</FilesMatch>

# JSON files - allow from your domain with caching, block direct access
<Files ~ "\.(json)$">
    RewriteEngine On
    # Allow access only if referrer is from your domain
    RewriteCond %{HTTP_REFERER} ^https://outbackgems\.com\.au/ [NC]
    RewriteRule .* - [E=ALLOWED:1,L]
    
    # Block all other access (including direct access with no referrer)
    RewriteRule .* - [F,L]
    
    # Set cache headers for allowed access
    Header always set Cache-Control "public, max-age=300" env=ALLOWED
</Files>

# Only allow POST requests to PHP files
<Files ~ "\.php$">
    RewriteEngine On
    RewriteCond %{REQUEST_METHOD} !^POST$ [NC]
    RewriteRule .* - [F,L]
</Files>

# Block problematic bots and scrapers (but allow legitimate browsers)
RewriteCond %{HTTP_USER_AGENT} ^(httrack|wget|curl.*bot|libwww|python.*requests|ruby.*net|java.*bot) [NC]
RewriteRule .* - [F,L]

# --- Caching Rules ---

# Cache navbar for 24 hours
<Files "navbar.html">
    Header set Cache-Control "public, max-age=86400"
</Files>


# --- Security Headers ---

# Temporary simplified CSP for debugging
Header set Content-Security-Policy "default-src 'self'; img-src 'self' data: https:; script-src 'self' 'unsafe-inline' https:; style-src 'self' 'unsafe-inline' https:; font-src 'self' data: https:; connect-src 'self' https:; worker-src 'self' blob: https:; frame-src 'self' https:;"
Header set Permissions-Policy "geolocation=(), microphone=(), camera=(), fullscreen=(self), payment=*"



Header set X-Content-Type-Options "nosniff"
Header always set Strict-Transport-Security "max-age=63072000; includeSubDomains; preload"
Header set Referrer-Policy "strict-origin-when-cross-origin"
Header always append X-Frame-Options SAMEORIGIN