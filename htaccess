# Disable directory listing
Options -Indexes
# --- MIME Types for Images ---
AddType image/jpeg .jpeg .jpg
AddType image/png .png
AddType image/gif .gif
AddType image/webp .webp
AddType image/bmp .bmp
AddType image/tiff .tif .tiff

# Force correct MIME types for images (especially in directories with spaces)
<Files ~ "\.(jpe?g)$">
    ForceType image/jpeg
</Files>

<Files ~ "\.png$">
    ForceType image/png
</Files>

<Files ~ "\.gif$">
    ForceType image/gif
</Files>

<Files ~ "\.webp$">
    ForceType image/webp
</Files>

<Files ~ "\.bmp$">
    ForceType image/bmp
</Files>

<Files ~ "\.(tif|tiff)$">
    ForceType image/tiff
</Files>

# --- Existing Redirect Rules ---
RewriteEngine On

# ✅ Exclude critical static files from Prerender.io
RewriteCond %{REQUEST_URI} ^/robots\.txt([/?].*)?$ [NC]
RewriteRule .* - [L]

RewriteCond %{REQUEST_URI} ^/sitemap\.xml([/?].*)?$ [NC]
RewriteRule .* - [L]

RewriteCond %{REQUEST_URI} ^/favicon\.ico$ [NC]
RewriteRule .* - [L]

# ✅ Specifically exclude images directory from Prerender (PRIORITY - must be before general static files rule)
RewriteCond %{REQUEST_URI} ^/images/ [NC]
RewriteRule .* - [L]

# Exclude other static files from Prerender
RewriteCond %{REQUEST_URI} \.(js|css|xml|gif|jpg|jpeg|png|svg|webp|woff|woff2|ttf|eot|ico|bmp|tiff)$ [NC]
RewriteRule .* - [L]

# ✅ Redirect sitemap.txt -> sitemap.xml
RewriteCond %{REQUEST_URI} ^/sitemap\.txt$ [NC]
RewriteRule ^sitemap\.txt$ https://outbackgems.com.au/sitemap.xml [R=301,L]

# Redirect www to non-www (and force HTTPS)
RewriteCond %{HTTP_HOST} ^www\.outbackgems\.com\.au [NC]
RewriteRule ^(.*)$ https://outbackgems.com.au/$1 [L,R=301]

# Redirect HTTP to HTTPS (for non-www)
RewriteCond %{HTTPS} off
RewriteCond %{HTTP_HOST} ^outbackgems\.com\.au [NC]
RewriteRule ^(.*)$ https://outbackgems.com.au/$1 [L,R=301]

# Only apply Prerender to bot user agents, not regular users
RewriteCond %{HTTP_USER_AGENT} (googlebot|bingbot|yahoo|baiduspider|facebookexternalhit|twitterbot) [NC]
RequestHeader set X-Prerender-Token "jB2NVBnrYbku2t67YS1V"
RewriteRule ^(.*)$ https://service.prerender.io/https://outbackgems.com.au/$1 [P,L]


# --- Security Headers ---

Header set Content-Security-Policy "default-src 'self'; img-src 'self' data: https: *.paypal.com *.paypalobjects.com www.facebook.com www.gstatic.com *.synchronycredit.com; script-src 'self' https://cdnjs.cloudflare.com https://fonts.googleapis.com https://cdn.jsdelivr.net https://js.stripe.com https://www.paypal.com https://www.paypalobjects.com https://www.sandbox.paypal.com https://checkout.paypal.com https://*.paypal.cn https://objects.paypal.cn https://www.gstatic.com https://*.synchronycredit.com https://synchronycredit.com https://www.datadoghq-browser-agent.com https://static.novacredit.com https://script.googleusercontent.com https://www.google.com https://www.gstatic.com/recaptcha/ https://www.recaptcha.net; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com https://cdnjs.cloudflare.com https://cdn.jsdelivr.net https://www.paypalobjects.com; font-src 'self' data: https://fonts.gstatic.com https://cdnjs.cloudflare.com https://cdn.jsdelivr.net; connect-src 'self' https://script.googleusercontent.com https://script.google.com https://cdn.jsdelivr.net https://js.stripe.com https://www.paypal.com https://www.paypalobjects.com https://www.sandbox.paypal.com https://checkout.paypal.com https://cors-anywhere.herokuapp.com https://www.datadoghq-browser-agent.com https://outbackgems.netlify.app https://www.google.com/recaptcha/; worker-src 'self' blob: https://*.paypal.com; frame-src 'self' https://*.paypal.com https://*.paypalobjects.com https://www.sandbox.paypal.com https://js.stripe.com https://www.google.com/recaptcha/ https://www.recaptcha.net/recaptcha/;"
Header set Permissions-Policy "geolocation=(), microphone=(), camera=(), fullscreen=(self), payment=(self)"



Header set X-Content-Type-Options "nosniff"
Header always set Strict-Transport-Security "max-age=63072000; includeSubDomains; preload"
Header set Referrer-Policy "strict-origin-when-cross-origin"
Header always append X-Frame-Options SAMEORIGIN

# --- AGGRESSIVE SHORT-TERM CACHING FOR NEW SITE LAUNCH ---
# This section forces browsers to fetch fresh content during site redesign
# ⚠️ SWITCH TO LONG-TERM CACHING AFTER 2-3 WEEKS (see instructions below)

<IfModule mod_expires.c>
    ExpiresActive On
    
    # HTML/JSON - SHORT CACHE (30 minutes - fresh content without disrupting sessions)
    ExpiresByType text/html "access plus 1800 seconds"
    ExpiresByType application/json "access plus 1800 seconds"
    
    # CSS/JS - SHORT CACHE (30 minutes - forces updates without session disruption)
    ExpiresByType text/css "access plus 1800 seconds"
    ExpiresByType application/javascript "access plus 1800 seconds"
    ExpiresByType text/javascript "access plus 1800 seconds"
    
    # Images - SHORT CACHE (1 hour - balance between performance and freshness)
    ExpiresByType image/jpeg "access plus 1 hour"
    ExpiresByType image/jpg "access plus 1 hour"
    ExpiresByType image/png "access plus 1 hour"
    ExpiresByType image/gif "access plus 1 hour"
    ExpiresByType image/webp "access plus 1 hour"
    ExpiresByType image/svg+xml "access plus 1 hour"
    ExpiresByType image/x-icon "access plus 1 hour"
    
    # Fonts - MODERATE CACHE (1 day)
    ExpiresByType font/ttf "access plus 1 day"
    ExpiresByType font/woff "access plus 1 day"
    ExpiresByType font/woff2 "access plus 1 day"
    ExpiresByType application/font-woff "access plus 1 day"
    ExpiresByType application/font-woff2 "access plus 1 day"
</IfModule>

# Force revalidation for HTML/JSON (30 min cache with revalidation)
<FilesMatch "\.(html|json)$">
    Header set Cache-Control "public, max-age=1800, must-revalidate"
</FilesMatch>

# Short cache for CSS/JS with must-revalidate (30 minutes)
<FilesMatch "\.(css|js)$">
    Header set Cache-Control "public, max-age=1800, must-revalidate"
</FilesMatch>

# --- INSTRUCTIONS FOR SWITCHING TO LONG-TERM CACHING ---
# After 2-3 weeks when site is stable, replace the above section with:
#
# <IfModule mod_expires.c>
#     ExpiresActive On
#     ExpiresByType text/html "access plus 1 hour"
#     ExpiresByType application/json "access plus 1 hour"
#     ExpiresByType text/css "access plus 1 year"
#     ExpiresByType application/javascript "access plus 1 year"
#     ExpiresByType text/javascript "access plus 1 year"
#     ExpiresByType image/jpeg "access plus 1 year"
#     ExpiresByType image/jpg "access plus 1 year"
#     ExpiresByType image/png "access plus 1 year"
#     ExpiresByType image/gif "access plus 1 year"
#     ExpiresByType image/webp "access plus 1 year"
#     ExpiresByType font/ttf "access plus 1 year"
#     ExpiresByType font/woff "access plus 1 year"
#     ExpiresByType font/woff2 "access plus 1 year"
# </IfModule>
#
# <FilesMatch "\.(css|js|jpg|jpeg|png|gif|webp|woff|woff2|ttf)$">
#     Header set Cache-Control "public, max-age=31536000, immutable"
# </FilesMatch>